{"version":3,"sources":["pages/calculator/Calculator.jsx","App.js","index.js"],"names":["Calculator","useState","currentOperand","setCurrtentOperand","previousOperand","setPreviousOperand","operator","setOperator","addDigit","e","digit","target","innerText","includeDot","includes","operation","op","Number","toString","className","onClick","number","Array","from","pop","join","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAsKeA,MAlKf,WACE,MAA6CC,mBAAS,IAAtD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA6CF,mBAAS,IAAtD,mBAAMG,EAAN,KAAuBC,EAAvB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAMK,EAAN,KAAeC,EAAf,KAEMC,EAAS,SAACC,GACd,IAAIC,EAAQD,EAAEE,OAAOC,UACjBC,EAAaX,EAAeY,SAAS,KAClB,MAAnBZ,GAAoC,MAAVQ,GAA6B,MAAVA,GAAiBG,GAGlEV,EAAmB,GAAD,OAAID,GAAJ,OAAqBQ,KAenCK,EAAY,SAACN,GACjB,IAAIO,EAAKP,EAAEE,OAAOC,UAClB,GAAsB,KAAnBV,GAAgC,MAAPc,GAAcZ,GAAmBE,EAIzD,OAHFH,EAAmBC,GACnBC,EAAmB,SACnBE,EAAY,IAGd,KACwB,KAAnBL,GAAgC,MAAPc,GAClB,MAAPA,GAAkC,KAApBZ,GAAuC,KAAbE,GACrB,KAAnBJ,GAA6C,KAApBE,GAAuC,KAAbE,GAKxD,GAAsB,KAAnBJ,GAAiC,MAAPc,GAAiC,KAAnBZ,GAAoC,KAAZE,EAKnE,GAAU,MAAPU,EACC,OAAOV,GACH,IAAK,GAID,OAHAD,EAAmBH,GACnBC,EAAmB,SACnBI,EAAY,IAEhB,IAAK,IAID,OAHAJ,GAAoBc,OAAOb,GAAiBa,OAAOf,IAAiBgB,YACpEb,EAAmB,SACnBE,EAAY,IAEhB,IAAK,IAID,OAHAJ,GAAoBc,OAAOb,GAAiBa,OAAOf,IAAiBgB,YACpEb,EAAmB,SACnBE,EAAY,IAEhB,IAAK,IAID,OAHAJ,GAAoBc,OAAOb,GAAmB,GAAGa,OAAOf,IAAiBgB,YACzEb,EAAmB,SACnBE,EAAY,IAEhB,IAAK,OAQD,OAPGH,EACCD,GAAoBc,OAAOb,GAAiBa,OAAOf,IAAiBgB,YAEpEb,EAAmBH,GAEvBG,EAAmB,SACnBE,EAAY,IAEhB,QAAS,YAGf,OAAQD,GACN,IAAK,GAIH,OAHAD,EAAmBH,GACnBC,EAAmB,SACnBI,EAAYS,GAEd,IAAK,IAIH,OAHAX,EAAmBY,OAAOb,GAAmBa,OAAOf,IACpDC,EAAmB,SACnBI,EAAYS,GAEd,IAAK,IAIH,OAHAX,EAAmBY,OAAOb,GAAmBa,OAAOf,IACpDC,EAAmB,SACnBI,EAAYS,GAEd,IAAK,IACH,MAAsB,KAAnBd,IAIDG,EACIY,OAAOb,GAAmB,GAAKa,OAAOf,IAExCC,EAAmB,UANnBI,EAAYS,GAUlB,IAAK,OACH,MAAuB,KAAnBd,IAIAG,EACEY,OAAOb,GAAmBa,OAAOf,IAGvCC,EAAmB,UAPfI,EAAYS,GAUlB,QAAS,YA9ETT,EAAYS,IAyFlB,OACE,sBAAKG,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAYb,GAAaJ,EAAiC,kBAAjB,iBAA9C,UACGE,EADH,IACqBE,KAErB,qBAAKa,UAAU,iBAAf,SAAiCjB,OAEnC,wBAAQkB,QA9HA,WACRjB,EAAmB,IACnBE,EAAmB,IACnBE,EAAY,KA2HYY,UAAU,UAAlC,gBACA,wBAAQC,QAzHG,WACX,IAAIC,EAASC,MAAMC,KAAKrB,GACxBmB,EAAOG,MACPrB,EAAmBkB,EAAOI,KAAK,MAsH/B,iBACA,wBAAQL,QAASL,EAAjB,kBACA,wBAAQK,QAASZ,EAAjB,eACA,wBAAQY,QAASZ,EAAjB,eACA,wBAAQY,QAASZ,EAAjB,eACA,wBAAQY,QAASL,EAAjB,eACA,wBAAQK,QAASZ,EAAjB,eACA,wBAAQY,QAASZ,EAAjB,eACA,wBAAQY,QAASZ,EAAjB,eACA,wBAAQY,QAASL,EAAjB,eACA,wBAAQK,QAASZ,EAAjB,eACA,wBAAQY,QAASZ,EAAjB,eACA,wBAAQY,QAASZ,EAAjB,eACA,wBAAQY,QAASL,EAAjB,eACA,wBAAQK,QAASZ,EAAjB,eACA,wBAAQY,QAASZ,EAAjB,eACA,wBAAQkB,GAAG,KAAKN,QAASL,EAAWI,UAAU,UAA9C,mBCzJSQ,MANf,WACE,OACE,cAAC,EAAD,KCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9bf75602.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./styles.css\"\r\nimport { useState } from 'react';\r\n\r\nfunction Calculator() {\r\n  const [currentOperand, setCurrtentOperand] = useState(\"\")\r\n  const[previousOperand, setPreviousOperand] = useState(\"\")\r\n  const[operator,setOperator] = useState(\"\")\r\n  \r\n  const addDigit=(e)=>{\r\n    let digit = e.target.innerText\r\n    let includeDot = currentOperand.includes(\".\")\r\n    if((currentOperand === \"0\" && digit === \"0\") || (digit === \".\" && includeDot)){\r\n        return\r\n    }\r\n    setCurrtentOperand(`${currentOperand}${digit}`)\r\n  }\r\n//   ########################################################################\r\n  const clear=()=>{\r\n      setCurrtentOperand(\"\")\r\n      setPreviousOperand('')\r\n      setOperator(\"\")\r\n  }\r\n//   ########################################################################\r\n  const delDigit=()=>{\r\n      let number = Array.from(currentOperand)\r\n      number.pop()\r\n      setCurrtentOperand(number.join(''))\r\n  }\r\n//   #############################################################################\r\n  const operation = (e)=>{\r\n    let op = e.target.innerText\r\n    if(currentOperand === '' && op === '=' && previousOperand && operator ){\r\n      setCurrtentOperand(previousOperand)  \r\n      setPreviousOperand('')\r\n      setOperator('')\r\n        return;\r\n    }\r\n    if (\r\n        (currentOperand === \"\" && op === \"=\") ||\r\n        (op === \"=\" && previousOperand === \"\" && operator === \"\") ||\r\n        (currentOperand === \"\" && previousOperand === \"\" && operator === \"\")\r\n      ) {\r\n        // setOperator(op)\r\n        return;\r\n      }\r\n    if(currentOperand === '' && (op !== '=' && previousOperand !==''&& operator ==='') ){\r\n        setOperator(op)\r\n        return\r\n    }\r\n    \r\n    if(op === '='){\r\n        switch(operator){\r\n            case '':\r\n                setPreviousOperand(currentOperand)\r\n                setCurrtentOperand(\"\")\r\n                setOperator('')\r\n                return\r\n            case '+': \r\n                setCurrtentOperand((Number(previousOperand)+Number(currentOperand)).toString())\r\n                setPreviousOperand(\"\")\r\n                setOperator('')\r\n                return\r\n            case '-':\r\n                setCurrtentOperand((Number(previousOperand)-Number(currentOperand)).toString())\r\n                setPreviousOperand(\"\")\r\n                setOperator('')\r\n                return\r\n            case '*':\r\n                setCurrtentOperand((Number(previousOperand || 1)*Number(currentOperand)).toString())\r\n                setPreviousOperand(\"\")\r\n                setOperator('')\r\n                return\r\n            case 'รท':\r\n                if(previousOperand){\r\n                    setCurrtentOperand((Number(previousOperand)/Number(currentOperand)).toString())\r\n                }else{\r\n                    setPreviousOperand(currentOperand)\r\n                }\r\n                setPreviousOperand(\"\")\r\n                setOperator('')\r\n                return\r\n            default: return\r\n        }\r\n    }else{\r\n      switch (operator) {\r\n        case \"\":\r\n          setPreviousOperand(currentOperand);\r\n          setCurrtentOperand(\"\");\r\n          setOperator(op);\r\n          return;\r\n        case \"+\":\r\n          setPreviousOperand(Number(previousOperand) + Number(currentOperand));\r\n          setCurrtentOperand(\"\");\r\n          setOperator(op);\r\n          return;\r\n        case \"-\":\r\n          setPreviousOperand(Number(previousOperand) - Number(currentOperand));\r\n          setCurrtentOperand(\"\");\r\n          setOperator(op);\r\n          return;\r\n        case \"*\":\r\n          if(currentOperand === ''){\r\n              setOperator(op)\r\n              return\r\n          }else{\r\n            setPreviousOperand(\r\n                Number(previousOperand || 1) * Number(currentOperand)\r\n              );\r\n              setCurrtentOperand(\"\");\r\n              setOperator(op);\r\n          }\r\n          return;\r\n        case \"รท\":\r\n          if (currentOperand === '') {\r\n              setOperator(op)\r\n              return\r\n        } else {\r\n              setPreviousOperand(\r\n                Number(previousOperand) / Number(currentOperand)\r\n              );\r\n          }\r\n          setCurrtentOperand(\"\");\r\n          setOperator(op);\r\n          return;\r\n        default: return\r\n      }\r\n    }\r\n  }\r\n\r\n//   #############################################################################\r\n//   const equal =(e)=>{\r\n//       operation(e)\r\n//       setCurrtentOperand('')\r\n//       setOperator('')\r\n//   }\r\n  return (\r\n    <div className='calculatorgrid'>\r\n      <div className='output'>\r\n        <div className={!operator && !currentOperand ?'currentoperand':'previousoperand'}>\r\n          {previousOperand} {operator}\r\n        </div>\r\n        <div className='currentoperand'>{currentOperand}</div>\r\n      </div>\r\n      <button onClick={clear} className='spantwo'>AC</button>\r\n      <button onClick={delDigit}>DEL</button>\r\n      <button onClick={operation}>รท</button>\r\n      <button onClick={addDigit}>1</button>\r\n      <button onClick={addDigit}>2</button>\r\n      <button onClick={addDigit}>3</button>\r\n      <button onClick={operation}>*</button>\r\n      <button onClick={addDigit}>4</button>\r\n      <button onClick={addDigit}>5</button>\r\n      <button onClick={addDigit}>6</button>\r\n      <button onClick={operation}>+</button>\r\n      <button onClick={addDigit}>7</button>\r\n      <button onClick={addDigit}>8</button>\r\n      <button onClick={addDigit}>9</button>\r\n      <button onClick={operation}>-</button>\r\n      <button onClick={addDigit}>.</button>\r\n      <button onClick={addDigit}>0</button>\r\n      <button id='55' onClick={operation} className='spantwo'>=</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator","import Calculator from \"./pages/calculator/Calculator\"\n\nfunction App() {\n  return (\n    <Calculator/>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}